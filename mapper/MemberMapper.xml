<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.project01.mapper.MemberMapper">
  <select id="getList" resultType="com.example.project01.domain.MemberVO">
    <![CDATA[
         SELECT * FROM member WHERE id > 0
         ]]>
  </select>

  <select id="getListWithPaging" resultType="com.example.project01.domain.MemberVO">
    <![CDATA[
        SELECT *
        FROM member
        ORDER BY id DESC
        OFFSET (#{page} - 1) * #{rowsPerPage} ROWS FETCH FIRST #{rowsPerPage} ROWS ONLY
        ]]>
  </select>

  <insert id="save">
    <![CDATA[
        INSERT INTO member(id, email, password, nickname, name, age)
        VALUES (NEXTVAL('SEQ_MEMBER_ID'), #{email}, #{password}, #{nickname}, #{name}, #{age})
        ]]>
  </insert>

  <select id="read" parameterType="Long" resultType="com.example.project01.domain.MemberVO">
    select * from member
    where id = #{id}
  </select>

  <select id="selectMember" resultType="com.example.project01.domain.MemberVO">
    select * from member
    where email = #{email}
  </select>

  <select id="findByEmail" resultType="com.example.project01.domain.MemberVO">
    select * from member
    where email = #{email}
  </select>

  <select id="findEmail" resultType="String">
    select email from member
    where name = #{name}
  </select>

  <update id="update">
    update member
    set email = #{email}, name = #{name}, nickname = #{nickname}, age = #{age}, updatedate = CURRENT_TIMESTAMP
    where id = #{id}
  </update>

  <update id="updateKakao">
    update member
    set name = #{name}, nickname = #{nickname}, age = #{age}, updatedate = CURRENT_TIMESTAMP
    where id = #{id}
  </update>

  <select id="emailCheck" resultType="int">
    select count(*)
    from member
    where email = #{email}
  </select>

  <update id="updatePass">
    update member
    set password = #{password}
    where email = #{email}
  </update>

  <delete id="delete">
    delete from member where id = #{id}
  </delete>

  <select id="getTotal" resultType="long">
    select count(*) from member where id > 0
  </select>
</mapper>
