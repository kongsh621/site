<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.project01.mapper.BoardMapper">
    <!-- board 테이블의 모든 레코드를 조회 -->
    <select id="getList" resultType="com.example.project01.domain.BoardVO">
        <![CDATA[
         SELECT * FROM board WHERE id > 0
         ]]>
    </select>

    <select id="getListWithPaging" resultType="com.example.project01.domain.BoardVO">
        <![CDATA[
        SELECT id, title, writer, regdate, hits
        FROM board
        ORDER BY id DESC
        OFFSET (#{page} - 1) * #{rowsPerPage} ROWS FETCH FIRST #{rowsPerPage} ROWS ONLY
        ]]>
    </select>

    <!-- CREATE: 새로운 게시물을 등록(추가한 게시물의 id를 알 필요가 없는 경우)-->
    <insert id="insert">
        <![CDATA[
        INSERT INTO board(id, title, content, writer, filename, filepath)
        VALUES (NEXTVAL('SEQ_BOARD_ID'), #{title}, #{content}, #{writer}, #{filename}, #{filepath})
        ]]>
    </insert>

    <!--CREATE: 새로운 게시물을 등록(추가한 게시물의 id를 알아야 하는 경우)-->
    <insert id="insertSelectKey">
        <selectKey keyProperty="id" order="BEFORE" resultType="long">
            SELECT NEXTVAL('SEQ_BOARD_ID') FROM dual
        </selectKey>

        INSERT INTO board(id, title, content, writer, filename, filepath)
        VALUES (#{id}, #{title}, #{content}, #{writer}, #{filename}, #{filepath})
    </insert>

    <!--READ: PK인 id 컬럼으로 특정 게시물을 조회-->
    <select id="read" resultType="com.example.project01.domain.BoardVO">
        SELECT * FROM board WHERE id = #{id}
    </select>

    <!--UPDATE: PK인 id 컬럼으로 특정 게시물을 갱신-->
    <update id="update">
        UPDATE board
        SET title = #{title}, content = #{content}, writer = #{writer},
            updatedate = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!--DELETE: PK인 id 컬럼으로 특정 게시물을 삭제-->
    <delete id="delete">
        DELETE FROM board WHERE id = #{id}
    </delete>

    <delete id="deleteComment">
      delete from board_comment where id = #{id}
    </delete>

    <select id="getTotal" resultType="long">
        SELECT COUNT(*) FROM board WHERE id > 0
    </select>

    <update id="updateHits">
      update board
      set hits = hits + 1
      where id = #{id}
    </update>

    <select id="searchPost" parameterType="HashMap" resultType="com.example.project01.domain.BoardVO">
      select *
      from board
      where title like '%${search}%'
      ORDER BY id DESC
      OFFSET (#{criteria.page} - 1) * #{criteria.rowsPerPage} ROWS FETCH FIRST #{criteria.rowsPerPage} ROWS ONLY
    </select>

    <select id="getSearchTotal" resultType="long">
      select count(*)
      from board
      where title like '%${search}%'
    </select>

    <select id="findFiles" resultType="com.example.project01.domain.BoardVO">
      select filename, filepath
      from board
      where id = #{id}
    </select>

    <select id="getCommentWithPaging" parameterType="HashMap" resultType="com.example.project01.domain.BoardCommentVO">
      select *
      from board_comment
      where postid = #{postid}
      ORDER BY id ASC
      OFFSET (#{criteria.page} - 1) * #{criteria.rowsPerPage} ROWS FETCH FIRST #{criteria.rowsPerPage} ROWS ONLY
    </select>

    <insert id="writeComment">
      insert into board_comment(id, postid, writer, content, regdate)
      values(NEXTVAL('SEQ_BOARD_COMMENT_ID'), #{postid}, #{writer}, #{content}, current_timestamp)
    </insert>

    <select id="getCommentTotal" resultType="long">
      select count(*)
      from board_comment
      where postid = #{postid}
    </select>

</mapper>
